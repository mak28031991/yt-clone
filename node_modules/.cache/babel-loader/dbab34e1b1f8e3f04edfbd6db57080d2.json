{"ast":null,"code":"var _jsxFileName = \"/home/eshan/Desktop/newfolder/yt-clone/src/components/video/Video.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./_video.scss\";\nimport { AiFillEye } from \"react-icons/ai\";\nimport request from \"../../api\";\nimport moment from \"moment\";\nimport numeral from \"numeral\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Video = ({\n  video\n}) => {\n  _s();\n\n  const {\n    id,\n    snippet: {\n      channelId,\n      channelTitle,\n      title,\n      publishedAt,\n      thumbnails: {\n        medium\n      }\n    }\n  } = video;\n  const [views, setViews] = useState(null);\n  const [duration, setDuration] = useState(null);\n  const [channelIcon, setChannelIcon] = useState(null);\n  const seconds = moment.duration(duration).asSeconds();\n\n  const _duration = moment.utc(seconds * 1000).format(\"mm:ss\");\n\n  const _videoId = (id === null || id === void 0 ? void 0 : id.videoId) || id;\n\n  const history = useHistory();\n  useEffect(() => {\n    const get_video_details = async () => {\n      const {\n        data: {\n          items\n        }\n      } = await request(\"/videos\", {\n        params: {\n          part: \"contentDetails,statistics\",\n          id: _videoId\n        }\n      });\n      setDuration(items[0].contentDetails.duration);\n      setViews(items[0].statistics.viewCount);\n    };\n\n    get_video_details();\n  }, [_videoId]);\n  useEffect(() => {\n    const get_channel_icon = async () => {\n      const {\n        data: {\n          items\n        }\n      } = await request(\"/channels\", {\n        params: {\n          part: \"snippet\",\n          id: channelId\n        }\n      });\n      setChannelIcon(items[0].snippet.thumbnails.default);\n    };\n\n    get_channel_icon();\n  }, [channelId]);\n\n  const handleVideoClick = () => {\n    history.push(`/watch/${_videoId}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video\",\n    onClick: handleVideoClick,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video_top \",\n      children: [/*#__PURE__*/_jsxDEV(LazyLoadImage, {\n        src: medium.url,\n        alt: \"\",\n        effect: \"blur\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"video_duration\",\n        children: _duration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video_title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video_details\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(AiFillEye, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), \" \", numeral(views).format(\"0.a\"), \"Views \\u2022\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [moment(publishedAt).fromNow(), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video_channel\",\n      children: [/*#__PURE__*/_jsxDEV(LazyLoadImage, {\n        src: channelIcon === null || channelIcon === void 0 ? void 0 : channelIcon.url,\n        alt: \"\",\n        effect: \"blur\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: channelTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Video, \"kwf9fHlY9Fk4yqyU/zgHeu1x2YU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Video;\nexport default Video;\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["/home/eshan/Desktop/newfolder/yt-clone/src/components/video/Video.js"],"names":["React","useEffect","useState","AiFillEye","request","moment","numeral","LazyLoadImage","useHistory","Video","video","id","snippet","channelId","channelTitle","title","publishedAt","thumbnails","medium","views","setViews","duration","setDuration","channelIcon","setChannelIcon","seconds","asSeconds","_duration","utc","format","_videoId","videoId","history","get_video_details","data","items","params","part","contentDetails","statistics","viewCount","get_channel_icon","default","handleVideoClick","push","url","fromNow"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./_video.scss\";\n\nimport { AiFillEye } from \"react-icons/ai\";\nimport request from \"../../api\";\n\nimport moment from \"moment\";\nimport numeral from \"numeral\";\n\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Video = ({ video }) => {\n  const {\n    id,\n    snippet: {\n      channelId,\n      channelTitle,\n      title,\n      publishedAt,\n      thumbnails: { medium },\n    },\n  } = video;\n\n  const [views, setViews] = useState(null);\n  const [duration, setDuration] = useState(null);\n  const [channelIcon, setChannelIcon] = useState(null);\n\n  const seconds = moment.duration(duration).asSeconds();\n  const _duration = moment.utc(seconds * 1000).format(\"mm:ss\");\n\n  const _videoId = id?.videoId || id;\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const get_video_details = async () => {\n      const {\n        data: { items },\n      } = await request(\"/videos\", {\n        params: {\n          part: \"contentDetails,statistics\",\n          id: _videoId,\n        },\n      });\n      setDuration(items[0].contentDetails.duration);\n      setViews(items[0].statistics.viewCount);\n    };\n    get_video_details();\n  }, [_videoId]);\n\n  useEffect(() => {\n    const get_channel_icon = async () => {\n      const {\n        data: { items },\n      } = await request(\"/channels\", {\n        params: {\n          part: \"snippet\",\n          id: channelId,\n        },\n      });\n      setChannelIcon(items[0].snippet.thumbnails.default);\n    };\n    get_channel_icon();\n  }, [channelId]);\n\n  const handleVideoClick = () => {\n    history.push(`/watch/${_videoId}`);\n  };\n\n  return (\n    <div className=\"video\" onClick={handleVideoClick}>\n      <div className=\"video_top \">\n        {/* <img src={medium.url} alt=\"\" /> */}\n        <LazyLoadImage src={medium.url} alt=\"\" effect=\"blur\" />\n        <span className=\"video_duration\">{_duration}</span>\n      </div>\n      <div className=\"video_title\">{title}</div>\n      <div className=\"video_details\">\n        <span>\n          <AiFillEye /> {numeral(views).format(\"0.a\")}Views •\n        </span>\n        <span>{moment(publishedAt).fromNow()} </span>\n      </div>\n      <div className=\"video_channel\">\n        {/* <img src={channelIcon?.url} alt=\"\" /> */}\n        <LazyLoadImage src={channelIcon?.url} alt=\"\" effect=\"blur\" />\n        <p>{channelTitle}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Video;\n"]},"metadata":{},"sourceType":"module"}