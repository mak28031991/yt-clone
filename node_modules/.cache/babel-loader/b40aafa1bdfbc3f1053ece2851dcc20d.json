{"ast":null,"code":"import { HOME_VIDEOS_FAIL, HOME_VIDEOS_REQUEST, HOME_VIDEOS_SUCCESS } from \"../actionType\";\nimport request from \"../../api\";\nexport const getPopularVideos = () => async dispatch => {\n  try {\n    dispatch({\n      type: HOME_VIDEOS_REQUEST\n    });\n    const {\n      data\n    } = await request(\"/videos\", {\n      params: {\n        part: \"snippet,contentDetails,statistics\",\n        chart: \"mostPopular\",\n        regionCode: \"IN\",\n        maxResults: 20,\n        pageToken: \"\"\n      }\n    });\n    dispatch({\n      type: HOME_VIDEOS_SUCCESS,\n      payload: {\n        videos: data.items,\n        nextPageToken: data.nextPageToken,\n        category: \"All\"\n      }\n    });\n  } catch (error) {\n    console.log(error.message);\n    dispatch({\n      type: HOME_VIDEOS_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const getVideosByCategory = keyword => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: HOME_VIDEOS_REQUEST\n    });\n    const {\n      data\n    } = await request(\"/search\", {\n      params: {\n        part: \"snippet\",\n        maxResults: 20,\n        pageToken: getState().homeVideos.nextPageToken,\n        q: keyword,\n        type: \"video\"\n      }\n    });\n    dispatch({\n      type: HOME_VIDEOS_SUCCESS,\n      payload: {\n        videos: data.items,\n        nextPageToken: data.nextPageToken,\n        category: keyword\n      }\n    });\n  } catch (error) {\n    console.log(error.message);\n    dispatch({\n      type: HOME_VIDEOS_FAIL,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/eshan/Desktop/newfolder/yt-clone/src/redux/actions/videos.action.js"],"names":["HOME_VIDEOS_FAIL","HOME_VIDEOS_REQUEST","HOME_VIDEOS_SUCCESS","request","getPopularVideos","dispatch","type","data","params","part","chart","regionCode","maxResults","pageToken","payload","videos","items","nextPageToken","category","error","console","log","message","getVideosByCategory","keyword","getState","homeVideos","q"],"mappings":"AAAA,SACEA,gBADF,EAEEC,mBAFF,EAGEC,mBAHF,QAIO,eAJP;AAMA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACxD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL;AADC,KAAD,CAAR;AAGA,UAAM;AAAEM,MAAAA;AAAF,QAAW,MAAMJ,OAAO,CAAC,SAAD,EAAY;AACxCK,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,mCADA;AAENC,QAAAA,KAAK,EAAE,aAFD;AAGNC,QAAAA,UAAU,EAAE,IAHN;AAINC,QAAAA,UAAU,EAAE,EAJN;AAKNC,QAAAA,SAAS,EAAE;AALL;AADgC,KAAZ,CAA9B;AAUAR,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,mBADC;AAEPY,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAER,IAAI,CAACS,KADN;AAEPC,QAAAA,aAAa,EAAEV,IAAI,CAACU,aAFb;AAGPC,QAAAA,QAAQ,EAAE;AAHH;AAFF,KAAD,CAAR;AAQD,GAtBD,CAsBE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACAjB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,gBADC;AAEPc,MAAAA,OAAO,EAAEK,KAAK,CAACG;AAFR,KAAD,CAAR;AAID;AACF,CA9BM;AAgCP,OAAO,MAAMC,mBAAmB,GAAIC,OAAD,IAAa,OAAOnB,QAAP,EAAiBoB,QAAjB,KAA8B;AAC5E,MAAI;AACFpB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL;AADC,KAAD,CAAR;AAGA,UAAM;AAAEM,MAAAA;AAAF,QAAW,MAAMJ,OAAO,CAAC,SAAD,EAAY;AACxCK,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,SADA;AAENG,QAAAA,UAAU,EAAE,EAFN;AAGNC,QAAAA,SAAS,EAAEY,QAAQ,GAAGC,UAAX,CAAsBT,aAH3B;AAINU,QAAAA,CAAC,EAAEH,OAJG;AAKNlB,QAAAA,IAAI,EAAE;AALA;AADgC,KAAZ,CAA9B;AAUAD,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,mBADC;AAEPY,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAER,IAAI,CAACS,KADN;AAEPC,QAAAA,aAAa,EAAEV,IAAI,CAACU,aAFb;AAGPC,QAAAA,QAAQ,EAAEM;AAHH;AAFF,KAAD,CAAR;AAQD,GAtBD,CAsBE,OAAOL,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACAjB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,gBADC;AAEPc,MAAAA,OAAO,EAAEK,KAAK,CAACG;AAFR,KAAD,CAAR;AAID;AACF,CA9BM","sourcesContent":["import {\n  HOME_VIDEOS_FAIL,\n  HOME_VIDEOS_REQUEST,\n  HOME_VIDEOS_SUCCESS,\n} from \"../actionType\";\n\nimport request from \"../../api\";\n\nexport const getPopularVideos = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: HOME_VIDEOS_REQUEST,\n    });\n    const { data } = await request(\"/videos\", {\n      params: {\n        part: \"snippet,contentDetails,statistics\",\n        chart: \"mostPopular\",\n        regionCode: \"IN\",\n        maxResults: 20,\n        pageToken: \"\",\n      },\n    });\n\n    dispatch({\n      type: HOME_VIDEOS_SUCCESS,\n      payload: {\n        videos: data.items,\n        nextPageToken: data.nextPageToken,\n        category: \"All\",\n      },\n    });\n  } catch (error) {\n    console.log(error.message);\n    dispatch({\n      type: HOME_VIDEOS_FAIL,\n      payload: error.message,\n    });\n  }\n};\n\nexport const getVideosByCategory = (keyword) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: HOME_VIDEOS_REQUEST,\n    });\n    const { data } = await request(\"/search\", {\n      params: {\n        part: \"snippet\",\n        maxResults: 20,\n        pageToken: getState().homeVideos.nextPageToken,\n        q: keyword,\n        type: \"video\",\n      },\n    });\n\n    dispatch({\n      type: HOME_VIDEOS_SUCCESS,\n      payload: {\n        videos: data.items,\n        nextPageToken: data.nextPageToken,\n        category: keyword,\n      },\n    });\n  } catch (error) {\n    console.log(error.message);\n    dispatch({\n      type: HOME_VIDEOS_FAIL,\n      payload: error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}