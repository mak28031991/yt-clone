{"ast":null,"code":"var _jsxFileName = \"/home/eshan/Desktop/newfolder/yt-clone/src/components/videoHorizontal/VideoHorizontal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./_videoHorizontal.scss\";\nimport { AiFillEye } from \"react-icons/ai\";\nimport request from \"../../api\";\nimport moment from \"moment\";\nimport numeral from \"numeral\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VideoHorizontal = ({\n  video,\n  searchScreen,\n  subScreen\n}) => {\n  _s();\n\n  const {\n    id,\n    snippet: {\n      channelId,\n      channelTitle,\n      description,\n      title,\n      publishedAt,\n      thumbnails: {\n        medium\n      }\n    },\n    resourceId\n  } = video;\n  const isVideo = !(id.kind === \"youtube#channel\" || subScreen);\n  const [views, setViews] = useState(null);\n  const [duration, setDuration] = useState(null);\n  const [channelIcon, setChannelIcon] = useState(null);\n  useEffect(() => {\n    const get_video_details = async () => {\n      const {\n        data: {\n          items\n        }\n      } = await request(\"/videos\", {\n        params: {\n          part: \"contentDetails,statistics\",\n          id: id.videoId\n        }\n      });\n      setDuration(items[0].contentDetails.duration);\n      setViews(items[0].statistics.viewCount);\n    };\n\n    if (isVideo) get_video_details();\n  }, [id, isVideo]);\n  useEffect(() => {\n    const get_channel_icon = async () => {\n      const {\n        data: {\n          items\n        }\n      } = await request(\"/channels\", {\n        params: {\n          part: \"snippet\",\n          id: channelId\n        }\n      });\n      setChannelIcon(items[0].snippet.thumbnails.default);\n    };\n\n    get_channel_icon();\n  }, [channelId]);\n  const seconds = moment.duration(duration).asSeconds();\n\n  const _duration = moment.utc(seconds * 1000).format(\"mm:ss\");\n\n  const history = useHistory();\n\n  const _channelId = (resourceId === null || resourceId === void 0 ? void 0 : resourceId.channelId) || channelId;\n\n  const handleClick = () => {\n    isVideo ? history.push(`/watch/${id.videoId}`) : history.push(`/watch/${_channelId}`);\n  };\n\n  const thumbnail = !isVideo && \"videoHorizontal_thumbnail-channel\";\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"py-2 m-1 videoHorizontal align-items-center\",\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      xs: 6,\n      md: searchScreen || subScreen ? 4 : 6,\n      className: \"videoHorizontal_left\",\n      children: [/*#__PURE__*/_jsxDEV(LazyLoadImage, {\n        src: medium.url,\n        effect: \"blur\",\n        className: `videoHorizontal_thumbnail ${thumbnail}`,\n        wrapperClassName: \"videoHorizontal_thumbnail-wrapper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), isVideo && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"videoHorizontal_duration\",\n        children: _duration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      xs: 6,\n      md: searchScreen || subScreen ? 8 : 6,\n      className: \"videoHorizontal_right p-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"videoHorizontal_title mb-1\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), isVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"videoHorizontal_details\",\n        children: [/*#__PURE__*/_jsxDEV(AiFillEye, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), \" \", numeral(views).format(\"0.a\"), \" Views \\u2022\", moment(publishedAt).fromNow()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), searchScreen || subScreen, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"videoHorizontal_channel d-flex align-items-center my-1\",\n        children: [isVideo && /*#__PURE__*/_jsxDEV(LazyLoadImage, {\n          src: channelIcon === null || channelIcon === void 0 ? void 0 : channelIcon.url,\n          effect: \"blur\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-0\",\n          children: channelTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VideoHorizontal, \"X0ZaqerSf5tYejeQZK0axDaNuPE=\", false, function () {\n  return [useHistory];\n});\n\n_c = VideoHorizontal;\nexport default VideoHorizontal;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoHorizontal\");","map":{"version":3,"sources":["/home/eshan/Desktop/newfolder/yt-clone/src/components/videoHorizontal/VideoHorizontal.js"],"names":["React","useEffect","useState","AiFillEye","request","moment","numeral","LazyLoadImage","Col","Row","useHistory","VideoHorizontal","video","searchScreen","subScreen","id","snippet","channelId","channelTitle","description","title","publishedAt","thumbnails","medium","resourceId","isVideo","kind","views","setViews","duration","setDuration","channelIcon","setChannelIcon","get_video_details","data","items","params","part","videoId","contentDetails","statistics","viewCount","get_channel_icon","default","seconds","asSeconds","_duration","utc","format","history","_channelId","handleClick","push","thumbnail","url","fromNow"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./_videoHorizontal.scss\";\n\nimport { AiFillEye } from \"react-icons/ai\";\nimport request from \"../../api\";\n\nimport moment from \"moment\";\nimport numeral from \"numeral\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { useHistory } from \"react-router\";\n\nconst VideoHorizontal = ({ video, searchScreen, subScreen }) => {\n  const {\n    id,\n    snippet: {\n      channelId,\n      channelTitle,\n      description,\n      title,\n      publishedAt,\n      thumbnails: { medium },\n    },\n    resourceId,\n  } = video;\n\n  const isVideo = !(id.kind === \"youtube#channel\" || subScreen);\n\n  const [views, setViews] = useState(null);\n  const [duration, setDuration] = useState(null);\n  const [channelIcon, setChannelIcon] = useState(null);\n\n  useEffect(() => {\n    const get_video_details = async () => {\n      const {\n        data: { items },\n      } = await request(\"/videos\", {\n        params: {\n          part: \"contentDetails,statistics\",\n          id: id.videoId,\n        },\n      });\n      setDuration(items[0].contentDetails.duration);\n      setViews(items[0].statistics.viewCount);\n    };\n    if (isVideo) get_video_details();\n  }, [id, isVideo]);\n\n  useEffect(() => {\n    const get_channel_icon = async () => {\n      const {\n        data: { items },\n      } = await request(\"/channels\", {\n        params: {\n          part: \"snippet\",\n          id: channelId,\n        },\n      });\n      setChannelIcon(items[0].snippet.thumbnails.default);\n    };\n    get_channel_icon();\n  }, [channelId]);\n\n  const seconds = moment.duration(duration).asSeconds();\n  const _duration = moment.utc(seconds * 1000).format(\"mm:ss\");\n\n  const history = useHistory();\n\n  const _channelId = resourceId?.channelId || channelId;\n\n  const handleClick = () => {\n    isVideo\n      ? history.push(`/watch/${id.videoId}`)\n      : history.push(`/watch/${_channelId}`);\n  };\n\n  const thumbnail = !isVideo && \"videoHorizontal_thumbnail-channel\";\n\n  return (\n    <Row\n      className=\"py-2 m-1 videoHorizontal align-items-center\"\n      onClick={handleClick}\n    >\n      {/*TODO.refractor.grid. */}\n      <Col\n        xs={6}\n        md={searchScreen || subScreen ? 4 : 6}\n        className=\"videoHorizontal_left\"\n      >\n        <LazyLoadImage\n          src={medium.url}\n          effect=\"blur\"\n          className={`videoHorizontal_thumbnail ${thumbnail}`}\n          wrapperClassName=\"videoHorizontal_thumbnail-wrapper\"\n        />\n\n        {isVideo && (\n          <span className=\"videoHorizontal_duration\">{_duration}</span>\n        )}\n      </Col>\n      <Col\n        xs={6}\n        md={searchScreen || subScreen ? 8 : 6}\n        className=\"videoHorizontal_right p-0\"\n      >\n        <p className=\"videoHorizontal_title mb-1\">{title}</p>\n\n        {isVideo && (\n          <div className=\"videoHorizontal_details\">\n            <AiFillEye /> {numeral(views).format(\"0.a\")} Views •\n            {moment(publishedAt).fromNow()}\n          </div>\n        )}\n\n        {searchScreen || subScreen}\n\n        <div className=\"videoHorizontal_channel d-flex align-items-center my-1\">\n          {isVideo && <LazyLoadImage src={channelIcon?.url} effect=\"blur\" />}\n          <p className=\"mb-0\">{channelTitle}</p>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default VideoHorizontal;\n"]},"metadata":{},"sourceType":"module"}