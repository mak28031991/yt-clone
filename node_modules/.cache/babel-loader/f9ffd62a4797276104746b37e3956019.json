{"ast":null,"code":"import request from \"../../api\";\nimport { SET_SUBSCRIPTION_STATUS } from \"../actionType\";\nexport const getChannelDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: CHANNEL_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await request(\"/channels\", {\n      params: {\n        part: \"snippet,contentDetails,statistics\",\n        id\n      }\n    });\n    dispatch({\n      type: CHANNEL_DETAILS_SUCCESS,\n      payload: data.items[0]\n    });\n  } catch (error) {\n    console.log(error.response.data);\n    dispatch({\n      type: CHANNEL_DETAILS_FAIL,\n      payload: error.response.data\n    });\n  }\n};\nexport const checkSubscriptionStatus = id => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await request(\"/subscriptions\", {\n      params: {\n        part: \"snippet\",\n        forChannelId: id,\n        mine: true\n      },\n      headers: {\n        Authorization: `Bearer ${getState().auth.accessToken}`\n      }\n    });\n    dispatch({\n      type: SET_SUBSCRIPTION_STATUS\n    });\n    console.log(data);\n  } catch (error) {\n    console.log(error.response.data);\n  }\n};","map":{"version":3,"sources":["/home/eshan/Desktop/newfolder/yt-clone/src/redux/actions/channel.action.js"],"names":["request","SET_SUBSCRIPTION_STATUS","getChannelDetails","id","dispatch","type","CHANNEL_DETAILS_REQUEST","data","params","part","CHANNEL_DETAILS_SUCCESS","payload","items","error","console","log","response","CHANNEL_DETAILS_FAIL","checkSubscriptionStatus","getState","forChannelId","mine","headers","Authorization","auth","accessToken"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,SAASC,uBAAT,QAAwC,eAAxC;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,EAAD,IAAQ,MAAOC,QAAP,IAAoB;AAC3D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEC;AADC,KAAD,CAAR;AAGA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMP,OAAO,CAAC,WAAD,EAAc;AAC1CQ,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,mCADA;AAENN,QAAAA;AAFM;AADkC,KAAd,CAA9B;AAOAC,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEK,uBADC;AAEPC,MAAAA,OAAO,EAAEJ,IAAI,CAACK,KAAL,CAAW,CAAX;AAFF,KAAD,CAAR;AAID,GAfD,CAeE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,CAAeT,IAA3B;AACAH,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEY,oBADC;AAEPN,MAAAA,OAAO,EAAEE,KAAK,CAACG,QAAN,CAAeT;AAFjB,KAAD,CAAR;AAID;AACF,CAvBM;AAyBP,OAAO,MAAMW,uBAAuB,GAAIf,EAAD,IAAQ,OAAOC,QAAP,EAAiBe,QAAjB,KAA8B;AAC3E,MAAI;AACF,UAAM;AAAEZ,MAAAA;AAAF,QAAW,MAAMP,OAAO,CAAC,gBAAD,EAAmB;AAC/CQ,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,SADA;AAENW,QAAAA,YAAY,EAAEjB,EAFR;AAGNkB,QAAAA,IAAI,EAAE;AAHA,OADuC;AAM/CC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASJ,QAAQ,GAAGK,IAAX,CAAgBC,WAAY;AAD9C;AANsC,KAAnB,CAA9B;AAWArB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ;AADC,KAAD,CAAR;AAGAa,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACD,GAhBD,CAgBE,OAAOM,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,CAAeT,IAA3B;AACD;AACF,CApBM","sourcesContent":["import request from \"../../api\";\nimport { SET_SUBSCRIPTION_STATUS } from \"../actionType\";\n\nexport const getChannelDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({\n      type: CHANNEL_DETAILS_REQUEST,\n    });\n    const { data } = await request(\"/channels\", {\n      params: {\n        part: \"snippet,contentDetails,statistics\",\n        id,\n      },\n    });\n\n    dispatch({\n      type: CHANNEL_DETAILS_SUCCESS,\n      payload: data.items[0],\n    });\n  } catch (error) {\n    console.log(error.response.data);\n    dispatch({\n      type: CHANNEL_DETAILS_FAIL,\n      payload: error.response.data,\n    });\n  }\n};\n\nexport const checkSubscriptionStatus = (id) => async (dispatch, getState) => {\n  try {\n    const { data } = await request(\"/subscriptions\", {\n      params: {\n        part: \"snippet\",\n        forChannelId: id,\n        mine: true,\n      },\n      headers: {\n        Authorization: `Bearer ${getState().auth.accessToken}`,\n      },\n    });\n\n    dispatch({\n      type: SET_SUBSCRIPTION_STATUS,\n    });\n    console.log(data);\n  } catch (error) {\n    console.log(error.response.data);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}