{"ast":null,"code":"var _jsxFileName = \"/home/eshan/Desktop/newfolder/yt-clone/src/screens/watchScreen/WatchScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Comments from \"../../components/comments/Comments\";\nimport VideoHorizontal from \"../../components/videoHorizontal/VideoHorizontal\";\nimport VideoMetaData from \"../../components/videoMetaData/VideoMetaData\";\nimport \"./_watchScreen.scss\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getRelatedVideos, getVideoById } from \"../../redux/actions/videos.action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WatchScreen = () => {\n  _s();\n\n  var _video$snippet, _video$statistics;\n\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getVideoById(id));\n    dispatch(getRelatedVideos(id));\n  }, [dispatch, id]);\n  const {\n    video,\n    loading\n  } = useSelector(state => state.selectedVideo);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      lg: 8,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"watchScreen_player\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: `https://www.youtube.com/embed/${id}`,\n          frameBorder: \"0\",\n          title: video === null || video === void 0 ? void 0 : (_video$snippet = video.snippet) === null || _video$snippet === void 0 ? void 0 : _video$snippet.title,\n          allowFullScreen: true,\n          width: \"100%\",\n          height: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), !loading ? /*#__PURE__*/_jsxDEV(VideoMetaData, {\n        video: video,\n        videoId: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Comments, {\n        videoId: id,\n        totalComments: video === null || video === void 0 ? void 0 : (_video$statistics = video.statistics) === null || _video$statistics === void 0 ? void 0 : _video$statistics.commentCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      lg: 4,\n      children: [...Array(10)].map(() => /*#__PURE__*/_jsxDEV(VideoHorizontal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WatchScreen, \"4TOhvgOTVJrgPwvSPW2WTZC73uM=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n\n_c = WatchScreen;\nexport default WatchScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"WatchScreen\");","map":{"version":3,"sources":["/home/eshan/Desktop/newfolder/yt-clone/src/screens/watchScreen/WatchScreen.js"],"names":["React","useEffect","Col","Row","Comments","VideoHorizontal","VideoMetaData","useParams","useDispatch","useSelector","getRelatedVideos","getVideoById","WatchScreen","id","dispatch","video","loading","state","selectedVideo","snippet","title","statistics","commentCount","Array","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,eAAP,MAA4B,kDAA5B;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AACA,OAAO,qBAAP;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,gBADF,EAEEC,YAFF,QAGO,mCAHP;;;AAKA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAASN,SAAS,EAAxB;AAEA,QAAMO,QAAQ,GAAGN,WAAW,EAA5B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CAACH,YAAY,CAACE,EAAD,CAAb,CAAR;AAEAC,IAAAA,QAAQ,CAACJ,gBAAgB,CAACG,EAAD,CAAjB,CAAR;AACD,GAJQ,EAIN,CAACC,QAAD,EAAWD,EAAX,CAJM,CAAT;AAMA,QAAM;AAAEE,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,aAAlB,CAAtC;AAEA,sBACE,QAAC,GAAD;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACE;AACE,UAAA,GAAG,EAAG,iCAAgCL,EAAG,EAD3C;AAEE,UAAA,WAAW,EAAC,GAFd;AAGE,UAAA,KAAK,EAAEE,KAAF,aAAEA,KAAF,yCAAEA,KAAK,CAAEI,OAAT,mDAAE,eAAgBC,KAHzB;AAIE,UAAA,eAAe,MAJjB;AAKE,UAAA,KAAK,EAAC,MALR;AAME,UAAA,MAAM,EAAC;AANT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAWG,CAACJ,OAAD,gBACC,QAAC,aAAD;AAAe,QAAA,KAAK,EAAED,KAAtB;AAA6B,QAAA,OAAO,EAAEF;AAAtC;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ,eAgBE,QAAC,QAAD;AACE,QAAA,OAAO,EAAEA,EADX;AAEE,QAAA,aAAa,EAAEE,KAAF,aAAEA,KAAF,4CAAEA,KAAK,CAAEM,UAAT,sDAAE,kBAAmBC;AAFpC;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAuBE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,gBACG,CAAC,GAAGC,KAAK,CAAC,EAAD,CAAT,EAAeC,GAAf,CAAmB,mBAClB,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CA5CD;;GAAMZ,W;UACWL,S,EAEEC,W,EAQUC,W;;;KAXvBG,W;AA8CN,eAAeA,WAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Comments from \"../../components/comments/Comments\";\nimport VideoHorizontal from \"../../components/videoHorizontal/VideoHorizontal\";\nimport VideoMetaData from \"../../components/videoMetaData/VideoMetaData\";\nimport \"./_watchScreen.scss\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getRelatedVideos,\n  getVideoById,\n} from \"../../redux/actions/videos.action\";\n\nconst WatchScreen = () => {\n  const { id } = useParams();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getVideoById(id));\n\n    dispatch(getRelatedVideos(id));\n  }, [dispatch, id]);\n\n  const { video, loading } = useSelector((state) => state.selectedVideo);\n\n  return (\n    <Row>\n      <Col lg={8}>\n        <div className=\"watchScreen_player\">\n          <iframe\n            src={`https://www.youtube.com/embed/${id}`}\n            frameBorder=\"0\"\n            title={video?.snippet?.title}\n            allowFullScreen\n            width=\"100%\"\n            height=\"100%\"\n          ></iframe>\n        </div>\n        {!loading ? (\n          <VideoMetaData video={video} videoId={id} />\n        ) : (\n          <h6>Loading</h6>\n        )}\n        <Comments\n          videoId={id}\n          totalComments={video?.statistics?.commentCount}\n        />\n      </Col>\n\n      <Col lg={4}>\n        {[...Array(10)].map(() => (\n          <VideoHorizontal />\n        ))}\n      </Col>\n    </Row>\n  );\n};\n\nexport default WatchScreen;\n"]},"metadata":{},"sourceType":"module"}